{"version":3,"sources":["components/table/thead-row/index.js","components/table/thead-row/thead-row.js","components/table/thead/index.js","components/table/thead/thead.js","components/table/tbody/index.js","components/table/tbody/tbody.js","components/table/index.js","components/table/table.js","components/helpers/index.js","components/helpers/helpers.js","components/input/input.js","components/input/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["TheadRow","renderTheadCell","mentorId","data","students","map","_ref","studentGit","react_default","a","createElement","className","key","currentIdMentor","this","props","Component","Thead","thead_row","Tbody","renderTaskName","taskNames","Object","keys","tasks","task","id","i","length","taskArray","entries","j","status","classNames","push","countCheckedTask","indexOf","children","name","concat","Table","mentors","table_thead","table_tbody","elem","mentorGit","slice","Input","state","value","suggestions","onChange","event","newValue","method","_this","setState","escapeRegexCharacters","str","replace","getSuggestions","escapedValue","trim","regex","RegExp","filter","mentor","test","getSuggestionValue","suggestion","onSuggestionsFetchRequested","_ref2","onSuggestionsClearRequested","renderSuggestion","onSubmit","e","preventDefault","onChangeMentorId","findIndex","_this$state","inputProps","placeholder","action","dist_default","input_Button","Button","App","changeMentorId","idx","dashboard","isNull","components_table","components_input","root","document","getElementById","ReactDOM","render","components_app"],"mappings":"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","file":"static/js/main.fdd5dd75.chunk.js","sourcesContent":["import TheadRow from \"./thead-row.js\";\r\n\r\nexport default TheadRow;\r\n","import React, { Component } from \"react\";\r\n\r\nimport data from \"../../../data/data.json\";\r\n\r\nexport default class TheadRow extends Component {\r\n  renderTheadCell = mentorId => {\r\n    const students = data[mentorId].students;\r\n    return students.map(({ studentGit }) => {\r\n      return (\r\n        <th className=\"thead-cell\" key={studentGit}>\r\n          {studentGit}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentIdMentor } = this.props;\r\n    const students = this.renderTheadCell(currentIdMentor);\r\n\r\n    return (\r\n      <tr className=\"thead-row\">\r\n        <th className=\"thead-cell\">Task</th>\r\n        {students}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import Thead from \"./thead.js\";\r\n\r\nexport default Thead;\r\n","import React from \"react\";\r\n\r\nimport TheadRow from \"../thead-row\";\r\n\r\nconst Thead = ({ currentIdMentor }) => {\r\n  return (\r\n    <thead className=\"thead\">\r\n      <TheadRow currentIdMentor={currentIdMentor} />\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default Thead;\r\n","import Tbody from \"./tbody.js\";\r\n\r\nexport default Tbody;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./tbody.css\";\r\nimport data from \"../../../data/data.json\";\r\n\r\nexport default class Tbody extends Component {\r\n    \r\n  renderTaskName = mentorId => {\r\n    const students = data[mentorId].students;\r\n    const taskNameArray = Object.keys(students[0].tasks);\r\n\r\n    const taskNames = taskNameArray.map(task => {\r\n      return [\r\n        <td className=\"tbody-cell\" key={task}>\r\n          {task}\r\n        </td>\r\n      ];\r\n    });\r\n\r\n    let id = 50;\r\n\r\n    for (let i = 0; i < students.length; i += 1) {\r\n      const taskArray = Object.entries(students[i].tasks);\r\n      for (let j = 0; j < taskArray.length; j += 1) {\r\n        id += 1;\r\n        const { status } = taskArray[j][1];\r\n        let classNames = \"tbody-cell\";\r\n        if (status === \"Checked\") {\r\n          classNames += \" checked\";\r\n        }\r\n        if (status === \"ToDo\") {\r\n          classNames += \" todo\";\r\n        }\r\n        if (status === \"In Progress\") {\r\n          classNames += \" in-progress\";\r\n        }\r\n        if (status === \"Checking\") {\r\n          classNames += \" checking\";\r\n        }\r\n        taskNames[j].push(<td className={classNames} key={id} />);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < taskNames.length; i += 1) {\r\n      let countCheckedTask = 0;\r\n      for (let j = 0; j < taskNames[i].length; j += 1) {\r\n        const {\r\n          props: { className }\r\n        } = taskNames[i][j];\r\n        const statusTask = \"checked\";\r\n        if (className.indexOf(statusTask) !== -1) {\r\n          countCheckedTask += 1;\r\n          if (countCheckedTask === taskNames[i].length - 1) {\r\n            const {\r\n              props: { children }\r\n            } = taskNames[i][0];\r\n            taskNames[i][0] = (\r\n              <td className=\"tbody-cell checked\" key={children}>\r\n                {children}\r\n              </td>\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return taskNames.map(name => {\r\n      const {\r\n        props: { children }\r\n      } = name[0];\r\n      return (\r\n        <tr className=\"tbody-row\" key={`${children}key`}>\r\n          {name}\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentIdMentor } = this.props;\r\n    const students = this.renderTaskName(currentIdMentor);\r\n\r\n    return <tbody className=\"tbody\">{students}</tbody>;\r\n  }\r\n}\r\n","import Table from \"./table\";\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nimport Thead from \"../table/thead\";\r\nimport Tbody from \"../table/tbody\";\r\n\r\nconst Dashboard = ({ currentIdMentor, mentors }) => {\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"mentor\">\r\n        <span>Mentor - </span>\r\n        <span>{mentors[currentIdMentor].name}</span>\r\n      </div>\r\n      <table className=\"table\">\r\n        <Thead currentIdMentor={currentIdMentor} />\r\n        <Tbody currentIdMentor={currentIdMentor} />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import mentors from \"./helpers\";\r\n\r\nexport default mentors;\r\n","import data from \"../../data/data.json\";\r\n\r\nconst mentors = data.map(elem => {\r\n    return {\r\n        name: elem.mentorGit.slice(19)\r\n    };\r\n});\r\n\r\nexport default mentors;","import React, { Component } from \"react\";\r\n\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport mentors from \"../helpers\";\r\nimport \"./input.css\";\r\n\r\nexport default class Input extends Component {\r\n  state = {\r\n    value: \"\",\r\n    suggestions: []\r\n  };\r\n\r\n  onChange = (event, { newValue, method }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  };\r\n\r\n  escapeRegexCharacters = str => {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n  };\r\n\r\n  getSuggestions = value => {\r\n    const escapedValue = this.escapeRegexCharacters(value.trim());\r\n\r\n    if (escapedValue === \"\") {\r\n      return [];\r\n    }\r\n\r\n    const regex = new RegExp(\"^\" + escapedValue, \"i\");\r\n\r\n    return mentors.filter(mentor => regex.test(mentor.name));\r\n  };\r\n\r\n  getSuggestionValue = suggestion => {\r\n    return suggestion.name;\r\n  };\r\n\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n  renderSuggestion = suggestion => {\r\n    return <span>{suggestion.name}</span>;\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { onChangeMentorId } = this.props;\r\n    const { value } = this.state;\r\n\r\n    let idx;\r\n\r\n    value === \"\"\r\n      ? (idx = null)\r\n      : (idx = mentors.findIndex(mentor => mentor.name === value));\r\n\r\n    onChangeMentorId(idx);\r\n  };\r\n\r\n  render() {\r\n    const { value, suggestions } = this.state;\r\n    const inputProps = {\r\n      placeholder: \"Type github of mentor\",\r\n      value,\r\n      onChange: this.onChange\r\n    };\r\n\r\n    return (\r\n      <form action=\"\" onSubmit={this.onSubmit} className='form'>\r\n        <Autosuggest\r\n          suggestions={suggestions}\r\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n          getSuggestionValue={this.getSuggestionValue}\r\n          renderSuggestion={this.renderSuggestion}\r\n          inputProps={inputProps}\r\n        />\r\n        <Button />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Button = () => {\r\n  return <button className='btn-search'>Search</button>;\r\n};\r\n","import Input from \"./input\";\r\n\r\nexport default Input;\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { isNull } from \"util\";\r\nimport \"./app.css\";\r\nimport Dashboard from \"../table\";\r\nimport mentors from '../helpers'\r\nimport Input from \"../input\";\r\n\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    currentIdMentor: null\r\n  };\r\n\r\n  changeMentorId = idx => {\r\n    this.setState({\r\n      currentIdMentor: idx\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { currentIdMentor } = this.state;\r\n\r\n    const NoSelect = () => <div>No mentor has been selected</div>;\r\n    const NoMentor = () => <div>Mentor was not found</div>;\r\n\r\n    const dashboard = isNull(currentIdMentor) ? (\r\n      <NoSelect />\r\n    ) : currentIdMentor === -1 ? (\r\n      <NoMentor />\r\n    ) : (\r\n      <Dashboard currentIdMentor={currentIdMentor} mentors={mentors} />\r\n    );\r\n\r\n    return (\r\n      <div className=\"dashboard-app\">\r\n        <Input onChangeMentorId={this.changeMentorId} />\r\n        {dashboard}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\nReactDOM.render(<App />, root);"],"sourceRoot":""}